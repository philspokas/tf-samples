# Terraform plan and apply

trigger:
- master

pool:
  name: 'Terraform-windows-agents'

variables:
- name: target-dir
  value: "./logicapps"
- group: samples
- group: tags

jobs:
- job: init_and_plan
  steps:
  - powershell: .\build\create-tfvars.ps1
    displayName: 'Build tfvars'
    workingDirectory: $(target-dir)
  
  - task: PowerShell@2
    displayName: 'terraform init'
    inputs:
      targetType: 'inline'
      script: |
        terraform init `
          -backend-config="resource_group_name=$(resource_group_name)" `
          -backend-config="storage_account_name=$(tfStorageAccount)" `
          -backend-config="container_name=$(tfStateContainerName)" `
          -backend-config="access_key=$(tfAccountKey)" `
          -backend-config="key=$(MyEnvironmentName).sample.tfstate" `
          -input=false  3>warn.txt 2>error.txt >output.txt
          "---- warnings --- "
          type warn.txt
          "--- errors ---"
          type error.txt
          "--- output ---"
          type output.txt
      errorActionPreference: 'continue'
      workingDirectory: '$(target-dir)'

  - task: AzureCLI@2
    displayName: plan
    inputs:
      azureSubscription: 'mti-policy-01-srvc'
      scriptType: 'ps'
      scriptLocation: 'inlineScript'
      inlineScript: |
        terraform plan -out plan.out  `
          -var-file "main.tfvars" `
          -var "subscription_id=$(subscription_id)" `
          -var "client_id=$env:servicePrincipalId" `
          -var "client_secret=$env:servicePrincipalKey" `
          -var "tenant_id=$env:tenantId" `
          -input=false  3>warn.txt 2>error.txt >output.txt
        "--- errors ---------------------------------------------------------------------------------------------"
        type error.txt
        "--- warnings -------------------------------------------------------------------------------------------"
        type warn.txt
        "--- output ---------------------------------------------------------------------------------------------"
        type output.txt
        Get-Content error.txt | Foreach-Object {
          Write-Host "##vso[task.LogIssue type=error;]$_"
        }
        Write-Host "##vso[task.uploadsummary]$(target-dir)/output.txt"
      powerShellErrorActionPreference: 'continue'
      addSpnToEnvironment: true
      workingDirectory: '$(target-dir)'

  - publish: $(target-dir)/*.txt
    artifact: PlanOutput

  - publish: $(target-dir)/plan.out
    artifact: TerraformPlan
  
- job: confirm_plan
  dependsOn: init_and_plan
  displayName: Review and confirm plan  
  pool: server    
  timeoutInMinutes: 2880 # times out in 2 days
  steps:   
  - task: ManualValidation@0
    timeoutInMinutes: 1440 # task times out in 1 day
    inputs:
      notifyUsers: |
        pspokas@micron.com
      instructions: 'Review and validate plan'
      onTimeout: 'resume'

- job: apply
  dependsOn: confirm_plan
  steps:
  - download: current
    artifact: TerraformPlan

  - script: |
      echo --- Apply ---
      terraform apply $(Pipeline.Workspace)/TerraformPlan/plan.out
    displayName: 'Terraform apply'
    workingDirectory: $(target-dir)

